version: "3.9"
x-redash-service: &redash-service
  image: redash/redash:8.0.0.b32245
  depends_on:
    - redash-postgres
    - redash-redis
    - database
  networks:
    - redash
  profiles: ["redash"]
x-airflow-service: &airflow-service
  build: ./docker/airflow
  depends_on: 
    - airflow-backend
    - database
  networks: 
    - airflow
  volumes:
    - "airflow-engine:/opt/airflow"
    - "./dags:/opt/airflow/dags"
    - "./covid_data:/home/airflow/covid"
  env_file:
    - ./docker/mysql.env
  profiles: ["airflow"]
x-redash-environment: &redash-environment
  PYTHON_UNBUFFERED: 0
  REDASH_LOG_LEVEL: "INFO"
  REDASH_REDIS_URL: "redis://redash-redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres@redash-postgres/postgres"

services:
  airflow-backend:
    image: mysql:latest
    command: ['--character-set-server=utf8', '--collation-server=utf8_unicode_ci', '--default-authentication-plugin=mysql_native_password']
    networks: 
      - airflow
    volumes:
      - "airflow-backend:/var/lib/mysql"
    env_file:
      - ./docker/mysql.env
    cap_add:
      - SYS_NICE
    profiles: ["airflow"]
    
  airflow-scheduler:
    <<: *airflow-service
    command: scheduler

  airflow-webserver:
    <<: *airflow-service
    command: webserver 
    ports:
      - "8080:8080"

  database:
    build: ./docker/mongodb/
    ports:
      - "12345:27017"
    networks:
      - airflow
      - api
      - redash
    volumes:
      - "database:/data/db"
    env_file:
      - ./docker/mongodb.env

  rest-api:
    build: "./docker/rest-api"
    ports:
      - "11223:80"
    networks:
      - api
    depends_on:
      - database

  redash-server:
    <<: *redash-service
    command: server
    depends_on:
      - redash-scheduler
      - redash-scheduled_worker
      - redash-adhoc_worker
    ports:
      - "5000:5000"
    environment:
      <<: *redash-environment
      REDASH_WEB_WORKERS: 4  
  
  redash-scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      <<: *redash-environment
      QUEUES: "celery"
      WORKERS_COUNT: 1
  
  redash-scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      <<: *redash-environment
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  
  redash-adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      <<: *redash-environment
      QUEUES: "queries"
      WORKERS_COUNT: 2
  
  redash-redis:
    image: redis:5.0-alpine
    networks:
      - redash
    profiles: ["redash"]
  
  redash-postgres:
    build: ./docker/redash-database
    networks:
      - redash
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - "redash-postgres:/var/lib/postgresql/data"
    profiles: ["redash"]
  
  redash-nginx:
    image: redash/nginx:latest
    networks:
      - redash
    ports:
      - "80:80"
    depends_on:
      - redash-server
    links:
      - redash-server:redash
    profiles: ["redash"]

networks:
  airflow:
  redash:
  api:
volumes:
  airflow-backend:
  airflow-engine:
  database:
  redash-postgres: